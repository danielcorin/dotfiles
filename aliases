# quick ones
alias ls="ls -G"
alias l="exa"
alias ll="l -l";
alias l.="l -lrah";
alias c="clear";
alias h="history";
alias t="touch";
alias o="open .";

# dev
alias a=". env/bin/activate"
# clean up unison garbage
alias cl="find * -name '*unison.tmp' | xargs rm"

# scripts
alias walls="python ~/dev/scripts/rename_walls.py";


# other
alias json="python -m json.tool";
alias serve="python -m SimpleHTTPServer";

alias hidehidden='defaults write com.apple.finder AppleShowAllFiles False; killall Finder';
alias showhidden='defaults write com.apple.finder AppleShowAllFiles True; killall Finder';

alias bt="blueutil";

# functions

function now () {
    if [ $# -eq 0 ]; then
        date +%s;
    else
        date -r $1;
    fi
}

function s () {
    if [ $# -eq 0 ]; then
        code .;
    else
        code $1;
    fi
}


function mcd () {
  mkdir -p "$1" && cd "$1";
}

function cdl () {
    cd $1; ls;
}

function cdf () {
    currFolderPath=$( /usr/bin/osascript <<"    EOT"
        tell application "Finder"
            try
                set currFolder to (folder of the front window as alias)
            on error
                set currFolder to (path to desktop folder as alias)
            end try
            POSIX path of currFolder
        end tell
    EOT
    )
    echo "cd to \"$currFolderPath\""
    cd "$currFolderPath"
}

function lh () {
    open http://localhost:"$1";
}

# colored man pages
man() {
    env \
        LESS_TERMCAP_md=$'\e[1;31m' \
        LESS_TERMCAP_me=$'\e[0m' \
        LESS_TERMCAP_se=$'\e[0m' \
        LESS_TERMCAP_so=$'\e[1;44;33m' \
        LESS_TERMCAP_ue=$'\e[0m' \
        LESS_TERMCAP_us=$'\e[1;32m' \
            man "$@"
}

# alias related
alias eal="code ~/.dotfiles/aliases";
alias sal=". ~/.bashrc; echo 'Sourced ~/.bashrc'";

# system
alias cal='cal | grep --before-context 6 --after-context 6 --color -e " $(date +%e)" -e "^$(date +%e)"';
alias batt='pmset -g batt | { read; read n status; echo "$status"; }';

# typos
alias pyhton=python;
alias pythno=python;
alias pythin=python;
alias sl=ls;

# git
alias gp='git pull';
alias gpo='git pull origin master';
alias gs='git status';
alias gc='git commit';
alias gb='git branch';
alias ga='git add -A';
alias gd='git diff';
alias gl='git log';
alias gb='git branch';
alias ggm='git checkout master';

function b64d {
	echo $1 | base64 --decode | jq .
}
alias gco='git checkout';
alias gcm='gco master';
alias grbm='git rebase master';
alias glg='git log --graph --pretty='\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)%an%Creset'\'' --abbrev-commit'
function ugh () {
    branch=$(git rev-parse --abbrev-ref HEAD)
    gcm
    gpo
    git reset --hard origin/master
    gco $branch
}

# git interactive checkout
alias gic="git status --porcelain | yank | xargs git checkout"
alias gsa="git stash apply"
# git interactive checkout branch
gg () {
	git branch | yank | xargs git checkout
}


alias tmux="export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock; tmux"

function doit() {
    COUNT=$1
    for i in $(seq 1 $COUNT); do ${@:2}; done
}

alias dt='cd ~/Desktop';
alias dfiles='s ~/.dotfiles';

pyclean () {
        find . -type f -name "*.py[co]" -delete
        find . -type d -name "__pycache__" -delete
}

alias tatt="tmux -CC a -t"
alias tnew="tmux -CC new-session -s"
alias tls="tmux ls"

alias sp2un='for i in *; do mv -iv "$i" "${i// /_}"; done'

alias xfmt="xmllint --format -"

function sha256() {
	echo -n $1 | shasum -a 256 | awk '{print $1}'
}

function bv() {
	eval "echo \$$1"
}

function ugh() {
	git checkout master
	git fetch origin
	git pull origin master
	git reset --hard origin/master
	git checkout -
	git rebase master
}

alias mr="make run"

alias hgr="history | grep "

alias cat="bat"
alias preview="fzf --preview 'bat --color \"always\" {}' | xargs open"
# list names of running docker containers
alias dna="docker ps --format '{{.Names}}'"
# list hashses of running docker containers
alias dha="docker ps -q"
# stop all docker containers
alias dsa="docker ps -a -q | xargs docker stop"
# watch running docker containers
alias dwa='watch "docker ps --format \"{{.Names}} {{.ID}}\""'
